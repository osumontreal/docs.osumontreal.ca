[{"uri":"https://docs.osumontreal.ca/fr/categories/","title":"Categories","tags":[],"description":"","content":""},{"uri":"https://docs.osumontreal.ca/fr/credits/","title":"Crédits","tags":[],"description":"","content":"Nous apprécions tous les efforts déployés afin de rendre les outils, packages1 et libraries1 ainsi que la documentation librement accessibles à tout le monde. Voici donc une liste non exhaustive dédiée à ceux que nous avons utilisées jusqu\u0026rsquo;à présent pour construire et supporter la communauté Open Science UMontréal.\nMerci à eux d\u0026rsquo;avoir amélioré l\u0026rsquo;Open Science et les logiciels Open Source!\nDocumentation  Matrix at TU Dresden - L\u0026rsquo;équipe derrière Matrix à TU Dresden fournit une merveilleuse documentation disponible sous une license CC BY-SA 4.0 que nous avons adaptée à nos besoins. Voir notre section Matrix Documentation pour un aperçu.  Outils  Hugo - Un générateur de sites statiques rapide et moderne écrit en Go que nous utilisons pour tous nos sites. GitHub - Déploiement continu et hébergement de tous nos répertoires, y compris cette documentation. Matrix - Un réseau ouvert pour une communication sécurisée et décentralisée disponible gratuitement.  Packages et libraries  hugo-theme-learn - Un thème multilingue entièrement conçu pour la documentation qui a été le point de départ de notre thème de documentation actuel (ce site Web). Il comprend des libraries1 telles que  mermaid - géneration de diagrames et graphiques à partir de texte similaire à Markdown; font awesome - Le framework de polices iconiques; jQuery - La plus connue des librairies Javascript; lunr - Lunr fournit des fonctions de recherche sans service externe; horsey - Autocomplétion de composants (utiliser pour les suggestions de recherche); clipboard.js - Copier le texte dans le presse-papier; highlight.js - Mise en valeur de codes; modernizr - Une boite à outil Javascript qui permet aux développeurs d\u0026rsquo;utiliser les dernières fonctionnalités de CSS et HTML5, même sur de vieux navigateurs.      Le nom officiel respectif de libraries et de packages en français sont bibliothèques et progiciel selon l\u0026rsquo;Office québécois de la langue française, mais nous préférons les termes anglais comme ils sont couramment utilisés dans les deux langues. \u0026#x21a9;\u0026#xfe0e;\n   "},{"uri":"https://docs.osumontreal.ca/fr/","title":"Documentation Open Science UMontréal","tags":[],"description":"","content":"Qu\u0026rsquo;est-ce qu\u0026rsquo;Open Science UMontréal ? Open Science UMontréal (OSUM) est une jeune initiative étudiante née à l\u0026rsquo;Université de Montréal qui oeuvre à favoriser l\u0026rsquo;intégration de méthodes de travail collaboratives et des outils en science ouverte dans le quotidien des membres de la communauté de recherche UdeMienne et d\u0026rsquo;ailleurs.\nOSUM est une communauté vivante qui regroupe des individus provenant de divers domaines de recherche, notamment les sciences sociales et biomédicales, le droit et l\u0026rsquo;informatique, et qui ont la science ouverte à coeur.\nVision   Nous croyons en un monde dans lequel tous les membres de la société ont accès librement aux processus création, aux contenus et retombées de la recherche scientifique.\n  Nous développons une communauté d’individus œuvrant afin d’atteindre ce but, défendant les principes de la science ouverte tels que l\u0026rsquo;inclusivité, la collaboration et la transparence.\n  Nous croyons fermement que la science ouverte nous permettra à long terme de résoudre efficacement les problèmes auxquels la science est confrontée actuellement.\n  Mission Open Science UMontréal a pour mission de promouvoir une science au service du bien commun, par la sensibilisation, la mise à disposition de ressources et la mobilisation de la communauté.\n1. Sensibilisation L\u0026rsquo;objectif d\u0026rsquo;OSUM est de sensibiliser la communauté aux avantages de l\u0026rsquo;utilisation de pratiques ouvertes et reproductibles, qui rendent la science plus accessible, transparente et crédible.\n Sensibiliser la communauté académique Sensibiliser les décideurs et les décideuses politiques, par le biais d\u0026rsquo;ateliers, de conférences, de blogues et bien d’autres, dans l’optique de provoquer efficacement l\u0026rsquo;adoption à grande échelle des pratiques de science ouverte à l’UdeM  2. Mise à disposition de ressources Nous visons à faciliter l\u0026rsquo;acquisition de connaissances et de compétences liées à la science ouverte grâce à des ressources accessibles à tous.\n Différentes ressources : des tutoriels, des guides d’application, des formations et des séances pour échanger sur les outils et les pratiques de la science ouverte Offrir une plateforme d’aide et de collaboration pour favoriser un meilleur encadrement dans l’adoption de pratiques de science ouverte Fournir du contenu accessible à la communauté francophone  3. Mobilisation de la communauté Nous voulons établir une communauté inclusive et collaborative travaillant à la transition vers une science plus ouverte, où tous sont les bienvenus pour apprendre, partager et discuter des valeurs, des principes et des pratiques de la science ouverte.\n Offrir des occasions de se rencontrer et encourager l\u0026rsquo;échange d\u0026rsquo;idées dans et entre les domaines, car nous pouvons tous apprendre les uns des autres    info Toute personne intéressée, qu\u0026rsquo;elle soit affiliée ou non à l\u0026rsquo;UdeM, peut participer aux activités et joindre notre initiative.\nPour nous joindre\nPour toute question, pour joindre un membre de notre équipe ou pour vous impliquez au sein d’Open Science Umontréal :\nContactez-nous via courriel info@openscience.ca ! Il nous fera plaisir de vous répondre :)\n  "},{"uri":"https://docs.osumontreal.ca/fr/sesame/","title":"Pause Méthode du SÉSAME à l&#39;UQTR","tags":[],"description":"","content":"L\u0026rsquo;atelier démontra la pertinence et le potentiel d\u0026rsquo;utiliser et de combiner des outils tels que Git, GitHub, R et RStudio dans un contexte de collaboration avec d’autres, mais aussi avec vous-même. Aucune expérience en programmation n\u0026rsquo;est nécessaire afin de profiter de l\u0026rsquo;atelier. Cet atelier vise à vous montrer diverses possibilités afin d\u0026rsquo;optimiser votre environnement de travail pour vos projets de recherche.\nCeci étant dit, si vous voulez suivre sur votre ordinateur en même temps que la démonstration, plusieurs étapes sont pré-requises. Ces étapes consistent à bien installer les différents logiciels s’ils ne sont pas déjà installés.\nInstructions d\u0026rsquo;installation La grande majorité des étapes ci-dessous sont extraites et traduites à partir de la magnifique ressource Happy Git and GitHub for the useR. Vous pouvez consulter directement la ressource à partir de la section I Installation si vous êtes à l’aise en anglais ou si vous voulez plus de détails. Sinon, veuillez continuer votre lecture ci-dessous.\n info NB: Bien installer et configurer tous les logiciels nécessaires est honnêtement la moitié de la bataille lorsque nous adoptons Git pour la première fois. Parfois l’installation se déroule sans problème, alors que d’autres fois c’est plus difficile en raison des particularités entre les différents ordinateurs (par exemple les systèmes d’exploitation Windows vs Mac vs Linux). La bonne nouvelle est qu’une fois que les logiciels sont installés, vous n’aurez plus à le faire sur cette machine. Lorsque vous aurez passé à travers l’installation, récompensez-vous, car vous aurez complété la partie du boulot la plus ennuyante!\n  Voici donc les étapes préalables: 1. Créez un compte sur GitHub. C\u0026rsquo;est gratuit! Vous devez vous rendre au https://github.com et cliquer sur Sign up.\n Votre username (nom d’utilisateur) vous sera fort utile lorsque vous synchroniserez vos travaux sur GitHub et il est public. Il s’agit de votre identifiant avec le monde, donc prenez soin de bien le choisir. Pour plus de trucs et astuces sur le choix d’un nom d’utilisateur, consultez la section Username advice.  2. Installez ou mettez à jour R et RStudio   Installez d’abord R pour votre système d\u0026rsquo;exploitation (Windows, Mac, Linux) en vous rendant au https://cloud.r-project.org/.\n Si vous installer R pour la première fois, lisez attentivement les instructions, car elles sont différentes selon le système d’exploitation. Vous voulez installer au moins la version 4.X.X de R, car les versions 3.X.X vous causeront probablement des problèmes dans le futur.    Installez ensuite RStudio pour votre système d’exploitation (Windows, Mac, Linux) en vous rendant au https://rstudio.com/products/rstudio/download/#download.\n  3. Installez Git  Consultez les instructions d\u0026rsquo;installation en fonction de votre système d\u0026rsquo;exploitation à partir de https://git-scm.com/downloads. Il se peut que Git soit déjà installé sur votre machine, surtout si vous utilisez un système d’exploitation Mac ou Linux, car Git est souvent pré-installé. Vous pouvez vérifier s’il est déjà installé ou tentez de l’installer et attendre que votre machine vous dise qu’il est déjà installé.  Pour vérifier si vous avez installé Git ou non, ouvrez un terminal/shell et tapez git --version. Si vous obtenez quelque chose similaire à git version 2.25.1, cela veut dire que git est bien installé et vous pouvez ignorez cette étape! Le terminal/shell est un programme sur votre ordinateur dont le travail consiste à exécuter d\u0026rsquo;autres programmes. Les pseudo-synonymes sont «ligne de commande» et «console». Les instructions pour ouvrir un terminal varie selon votre système d’exploitation.    4. Dites à Git qui vous êtes  info Cette étape est facultative si vous n\u0026rsquo;est pas à l\u0026rsquo;aise avec RStudio ou un terminal. Nous la ferons ensemble pendant l\u0026rsquo;atelier au besoin.\n  Option A Si vous êtes à l’aise d’ouvrir un terminal/shell (Appendix A), ouvrez un terminal et vous pouvez entrer ces lignes, une à la fois, avec les informations qui correspondent à celles que vous avez entrées sur GitHub.\ngit config --global user.name \u0026#39;Prénom Nom\u0026#39; git config --global user.email \u0026#39;votre@courriel.com\u0026#39; git config --global --list # Vérifier les informations que vous venez d\u0026#39;entrer   warning Pour les personnes qui utilisent Windows: Il se peut que vous rencontriez des obstacles que les gens sur Mac et Linux ne rencontrent pas. Si vous rencontrez des difficultés sous Windows, considérez qu\u0026rsquo;il existe différents types de shell et que vous vous trompez peut-être. Vous voulez être dans un shell «Git Bash», par opposition à Power Shell ou à la ligne de commande cmd.exe. Pour en savoir plus, consultez cette annexe de la ressource originale. Cela pourrait également être une raison de faire cette configuration via l\u0026rsquo;option B.\n  Option B Pour utiliser l’approche alternative avec le package usethis, veuillez suivre ces commandes afin de définir votre nom d\u0026rsquo;utilisateur et votre adresse e-mail dans Git à partir de R et RStudio:\ninstall.packages(\u0026#34;usethis\u0026#34;) library(usethis) use_git_config(user.name = \u0026#34;Prénom Nom\u0026#34;, user.email = \u0026#34;votre@courriel.com\u0026#34;) Félicitations, vous avez survécu à l\u0026rsquo;installation!\n"},{"uri":"https://docs.osumontreal.ca/fr/tags/","title":"Tags","tags":[],"description":"","content":""}]